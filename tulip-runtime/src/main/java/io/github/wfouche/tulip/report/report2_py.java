package io.github.wfouche.tulip.report;

/// usr/bin/env jbang "$0" "$@" ; exit $?

// spotless:off
//DEPS com.google.code.gson:gson:2.13.1
//DEPS org.hdrhistogram:HdrHistogram:2.2.2
//DEPS org.python:jython-slim:2.7.4
//JAVA 21
// spotless:on

import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.nio.charset.StandardCharsets;
import java.util.Base64;
import java.util.zip.GZIPInputStream;
import org.python.util.PythonInterpreter;

/**
 * The class provides a main method to run a Python script embedded in a Java application.
 *
 * <p>This class is generated by JBang from a Python script.
 */
public class report2_py {

    /** The base64 encoded Python script to be executed. */
    public static String mainScriptTextBase64 =
            "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";

    /** Private constructor to prevent instantiation. */
    public report2_py() {
        // Private constructor to prevent instantiation
    }

    /**
     * Decompresses a byte array that was compressed using GZIP.
     *
     * @param compressedData The byte array containing the compressed data.
     * @return The decompressed string.
     * @throws IOException if an I/O error occurs during decompression.
     */
    public static String decompress(byte[] compressedData) throws IOException {
        ByteArrayInputStream bis = new ByteArrayInputStream(compressedData);
        GZIPInputStream gzip = new GZIPInputStream(bis);
        ByteArrayOutputStream bos = new ByteArrayOutputStream();
        byte[] buffer = new byte[1024];
        int len;
        while ((len = gzip.read(buffer)) != -1) {
            bos.write(buffer, 0, len);
        }
        gzip.close();
        bis.close();
        bos.close();
        return bos.toString(StandardCharsets.UTF_8.name());
    }

    /**
     * The main method that serves as the entry point for the application. It initializes the Python
     * interpreter and executes the embedded script.
     *
     * @param args Command-line arguments passed to the application.
     * @throws IOException if an I/O error occurs during decompression.
     */
    public static void main(String... args) throws IOException {
        String mainScriptFilename = "report2.py";
        String mainScript = "";
        String pythonArgsScript = "";
        for (String arg : args) {
            if (pythonArgsScript.length() == 0) {
                if (!arg.equals(mainScriptFilename)) {
                    pythonArgsScript += "'" + mainScriptFilename + "', ";
                }
            } else {
                pythonArgsScript += ", ";
            }
            pythonArgsScript += "'" + arg + "'";
        }
        if (pythonArgsScript.length() == 0) {
            pythonArgsScript = "'" + mainScriptFilename + "'";
        }
        pythonArgsScript = "import sys; sys.argv = [" + pythonArgsScript + "]";
        {
            byte[] decodedBytes = Base64.getDecoder().decode(mainScriptTextBase64);
            String text = new String(decompress(decodedBytes));
            mainScript = text;
        }
        {
            // create Python interpreter object
            PythonInterpreter pyInterp = new PythonInterpreter();
            // initialize command-line args
            pyInterp.exec(pythonArgsScript);
            // run script
            pyInterp.exec(mainScript);
        }
    }
}
