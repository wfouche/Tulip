package io.github.wfouche.tulip.report;

/// usr/bin/env jbang "$0" "$@" ; exit $?

// spotless:off
//DEPS com.google.code.gson:gson:2.13.1
//DEPS org.hdrhistogram:HdrHistogram:2.2.2
//DEPS org.python:jython-slim:2.7.4
//JAVA 21
// spotless:on

import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.nio.charset.StandardCharsets;
import java.util.Base64;
import java.util.zip.GZIPInputStream;
import org.python.util.PythonInterpreter;

/**
 * The class provides a main method to run a Python script embedded in a Java application.
 *
 * <p>This class is generated by JBang from a Python script.
 */
public class report2_py {

    /** The base64 encoded Python script to be executed. */
    public static String mainScriptTextBase64 =
            "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";

    /** Private constructor to prevent instantiation. */
    public report2_py() {
        // Private constructor to prevent instantiation
    }

    /**
     * Decompresses a byte array that was compressed using GZIP.
     *
     * @param compressedData The byte array containing the compressed data.
     * @return The decompressed string.
     * @throws IOException if an I/O error occurs during decompression.
     */
    public static String decompress(byte[] compressedData) throws IOException {
        ByteArrayInputStream bis = new ByteArrayInputStream(compressedData);
        GZIPInputStream gzip = new GZIPInputStream(bis);
        ByteArrayOutputStream bos = new ByteArrayOutputStream();
        byte[] buffer = new byte[1024];
        int len;
        while ((len = gzip.read(buffer)) != -1) {
            bos.write(buffer, 0, len);
        }
        gzip.close();
        bis.close();
        bos.close();
        return bos.toString(StandardCharsets.UTF_8.name());
    }

    /**
     * The main method that serves as the entry point for the application. It initializes the Python
     * interpreter and executes the embedded script.
     *
     * @param args Command-line arguments passed to the application.
     * @throws IOException if an I/O error occurs during decompression.
     */
    public static void main(String... args) throws IOException {
        String mainScriptFilename = "report2.py";
        String mainScript = "";
        String pythonArgsScript = "";
        for (String arg : args) {
            if (pythonArgsScript.length() == 0) {
                if (!arg.equals(mainScriptFilename)) {
                    pythonArgsScript += "'" + mainScriptFilename + "', ";
                }
            } else {
                pythonArgsScript += ", ";
            }
            pythonArgsScript += "'" + arg + "'";
        }
        if (pythonArgsScript.length() == 0) {
            pythonArgsScript = "'" + mainScriptFilename + "'";
        }
        pythonArgsScript = "import sys; sys.argv = [" + pythonArgsScript + "]";
        {
            byte[] decodedBytes = Base64.getDecoder().decode(mainScriptTextBase64);
            String text = new String(decompress(decodedBytes));
            mainScript = text;
        }
        {
            // create Python interpreter object
            PythonInterpreter pyInterp = new PythonInterpreter();
            // initialize command-line args
            pyInterp.exec(pythonArgsScript);
            // run script
            pyInterp.exec(mainScript);
        }
    }
}
